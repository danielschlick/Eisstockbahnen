@page "/authentication"
@using EisstockbahnenWebModel;
@inject HttpClient Http
@inject IJSRuntime JS
@inject NavigationManager NavigationManager

<div class="container">
    <div class="row" style="margin-top:25em">
        <div>
            <div class="input-field col s6 offset-s3">
                <input id="userName" type="text" @bind="userName">
                <label class="active" for="userName">Benutzername</label>
            </div>
            <div class="input-field col s6 offset-s3">
                <input id="password" type="password" @bind="password">
                <label for="password">Passwort</label>
            </div>
            <div class="col s6 offset-s3" style="display: @visibility">
                <p>@errorMessage</p>
            </div>

            <div class="col s6 offset-s3">
                <button class="btn waves-effect waves-light grey darken-2" @onclick="CheckUser">Senden</button>
            </div>
        </div>
    </div>
</div>

@code {
    private string userName;
    private string password;
    private string errorMessage = "Falscher Username oder Passwort.";

    string visibility = "none";

    private async void CheckUser(MouseEventArgs e)
    {
        var accountModels = await Http.GetFromJsonAsync<AccountModel[]>("https://localhost:44361/api/account");
        var account = accountModels.FirstOrDefault(x => x.Username == userName && x.Password == password);
        if (account != null)
        {
            NavigationManager.NavigateTo("calculation");
        }
        else
        {
            visibility = "block";
        }
    }

}